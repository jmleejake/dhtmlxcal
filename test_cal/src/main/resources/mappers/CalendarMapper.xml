<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="global.sesoc.calendar.dao.CalendarMapper">

<!-- 1)캘린더 일정 월별 불러오기 -->
<select id="listCal" resultType="Calendar" parameterType="String">
  <![CDATA[
  select 
	  id 
	  , text 
	  , to_char(start_date, 'yyyy-mm-dd hh24:mi') start_date 
	  , to_char(end_date, 'yyyy-mm-dd hh24:mi') end_date
	  , content
	  , repeat_type
	  , to_char(repeat_end_date, 'yyyy-mm-dd') repeat_end_date
	  , is_dbdata
	  , alarm_yn
	  , alarm_val
  from events
  where start_date >= to_date(#{date}, 'yyyy-mm-dd')
  and end_date <= last_day(to_date(#{date}, 'yyyy-mm-dd'))
  ]]>
</select>
<!-- 2)캘린더 일정 저장하기 -->
<insert id="saveCal" parameterType="Calendar">
insert into events 
	(
	id
	, text
	, start_date
	, end_date
	, content
	, repeat_type
	<if test="repeat_end_date != null and repeat_end_date != ''">
	, repeat_end_date
	</if>
	, is_dbdata
	<if test="!alarm_val.equals('none')">
	, alarm_yn
	, alarm_val
	</if>
	)
values 
	(
	events_seq.nextval
	, #{text}
	, to_date(substr(#{start_date},1,24), 'DY MON DD YYYY HH24:MI:SS','NLS_DATE_LANGUAGE = American')
    , to_date(substr(#{end_date},1,24), 'DY MON DD YYYY HH24:MI:SS','NLS_DATE_LANGUAGE = American')
	, #{content}
	, #{repeat_type}
	<if test="repeat_end_date != null  and repeat_end_date != ''">
	, to_date(#{repeat_end_date} || ' 00:00:00', 'YYYY-MM-DD hh24:mi:ss') + 1
	</if>
	, 'T'
	<if test="!alarm_val.equals('none')">
	, 'T'
	, #{alarm_val}
	</if>
	)
</insert>
<!-- 3)캘린더 일정 삭제하기 -->
<delete id="delCal" parameterType="int">
delete from events
where id = #{id}
</delete>

<!-- id에 대한 이벤트 존재여부 구하기 -->
<select id="selectEvent" parameterType="string" resultType="Calendar">
select * from events where id = #{id}
</select>

<!-- 일정 수정 -->
<update id="updateEvent" parameterType="Calendar">
	update events
	set 
		text = #{text}
		, content = #{content}
		, start_date = to_date(substr(#{start_date},1,24), 'DY MON DD YYYY HH24:MI:SS','NLS_DATE_LANGUAGE = American')
		, end_date = to_date(substr(#{end_date},1,24), 'DY MON DD YYYY HH24:MI:SS','NLS_DATE_LANGUAGE = American')
		, repeat_type = #{repeat_type}
		<if test="repeat_end_date != null and repeat_end_date != ''">
		, to_date(#{repeat_end_date} || ' 00:00:00', 'YYYY-MM-DD hh24:mi:ss') + 1
		</if>
		<choose>
			<when test="!alarm_val.equals('none')">
			, alarm_yn = 'T'
			, alarm_val = #{alarm_val}
			</when>
			<when test="alarm_val.equals('none')">
			, alarm_yn = 'F'
			, alarm_val = null
			</when>
		</choose>
	where
		id = #{id}
</update>

<!-- 최신 글 번호 구하기 (반복등록시 필요) -->
<select id="selectLatestEventNum" resultType="string">
	select id
	from events
	where rownum = 1
	order by id desc
</select>

<!-- insert이후 다음날 구하기 (반복등록시 필요) -->
<select id="selectNextDate" parameterType="string" resultType="string">
	 select 
	 	to_char(
	 		to_date(#{check_day}
	 		, 'yyyy-mm-dd hh24:mi:ss') + 1
	 		, 'yyyy-mm-dd hh24:mi:ss') next_day 
	 from dual
</select>

<!-- 알림시간 얻기 -->
<select id="selectAlarmTime" parameterType="string" resultType="string">
	select to_char (start_date - alarm_val/(24*60), 'ss mi hh24 dd mm ? yyyy') alarm_time
	from events
	where alarm_yn = 'T'
		and id = #{id} 
</select>

</mapper>
